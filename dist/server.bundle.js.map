{"version":3,"file":"server.bundle.js","mappings":"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","sources":["webpack://ims/external commonjs \"express\"","webpack://ims/external commonjs \"dotenv\"","webpack://ims/external commonjs \"cors\"","webpack://ims/external commonjs \"colors\"","webpack://ims/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://ims/external commonjs \"@babel/runtime/regenerator\"","webpack://ims/external commonjs \"jsonwebtoken\"","webpack://ims/external commonjs \"express-async-handler\"","webpack://ims/external commonjs \"mongoose\"","webpack://ims/./models/userModel.js","webpack://ims/./middleware/authMiddleware.js","webpack://ims/./models/itemModel.js","webpack://ims/./controllers/itemController.js","webpack://ims/./routes/itemRoutes.js","webpack://ims/external commonjs \"bcryptjs\"","webpack://ims/./controllers/userController.js","webpack://ims/./routes/userRoutes.js","webpack://ims/./middleware/errorMiddleware.js","webpack://ims/./config/db.js","webpack://ims/./server.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"dotenv\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"colors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jsonwebtoken\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express-async-handler\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"mongoose\");","import mongoose from \"mongoose\";\n\nexport const userSchema = mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, \"Please add a name\"],\n  },\n  email: {\n    type: String,\n    required: [true, \"Please add an email\"],\n    unique: true,\n  },\n  password: {\n    type: String,\n    require: [true, \"Please add a password\"],\n  },\n},{\n    timestamps: true,\n});\n\nconst User = mongoose.model('User', userSchema)\nexport default User\n","import jwt from \"jsonwebtoken\";\nimport aysncHandler from \"express-async-handler\";\nimport User from \"../models/userModel.js\";\n\nexport const protect = aysncHandler(async (req, res, next) => {\n  let token;\n\n  if (\n    req.headers.authorization &&\n    req.headers.authorization.startsWith(\"Bearer\")\n  ) {\n    try {\n      token = req.headers.authorization.split(\" \")[1];\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n      req.user = await User.findById(decoded.id).select(\"-password\");\n      next();\n    } catch (error) {\n      console.log(error);\n      res.status(401);\n      throw new Error(\"Not authorized\");\n    }\n  }\n  if (!token) {\n    res.status(401);\n    throw new Error(\"Not authorized, no token\");\n  }\n});\n","import mongoose from \"mongoose\";\nimport User from \"../models/userModel.js\";\n\nexport const itemSchema = mongoose.Schema(\n  {\n    user: {\n      type: mongoose.Schema.Types.ObjectId,\n      required: true,\n      ref: \"User\",\n    },\n    name: {\n      type: String,\n      required: [true, \"Please add a name\"],\n    },\n    category: {\n      type: String,\n      required: [true, \"Please add a category\"],\n    },\n    quantity: {\n      type: Number,\n      required: false,\n    },\n    unitPrice: {\n      type: Number,\n      required: false,\n    },\n    SKU: {\n      type: String,\n      unique: true,\n      required: false,\n    },\n    description: {\n      type: String,\n      required: false,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\nconst Item = mongoose.model(\"Item\", itemSchema);\n\nexport default Item;\n","import asyncHandler from \"express-async-handler\";\nimport Item from \"../models/itemModel.js\";\nimport User from \"../models/userModel.js\";\n\n//@desc GET items\n//@route Get /api/items\n//@acess public\nexport const getItems = asyncHandler(async (req, res) => {\n  try {\n    const items = await Item.find();\n    res.status(200).json(items);\n  } catch (error) {\n    console.error(\"Error getting Items\", error);\n    res.status(500).json({ message: \"Server error getting items\" });\n  }\n});\n\n//@desc POST item\n//@route Post /api/items\n//@acess private\nexport const createItem = asyncHandler(async (req, res) => {\n  try {\n    if (!req.body.name) {\n      res.status(400);\n      throw new Error(\"Please add a name\");\n    }\n\n    const item = await Item.create({\n      name: req.body.name,\n      quantity: req.body.quantity,\n      unitPrice: req.body.unitPrice,\n      SKU: req.body.SKU,\n      description: req.body.description,\n      user: req.user.id,\n    });\n    res.status(200).json(item);\n  } catch (error) {\n    console.error(\"Error creating item\", error);\n    res.status(500).json({ message: \"Server error creating item\" });\n  }\n});\n\n//@desc Update item\n//@route PUT /api/items/:id\n//@access Private\nexport const updateItem = asyncHandler(async (req, res) => {\n  try {\n    // Find the item by ID\n    const item = await Item.findById(req.params.id);\n\n    // Check if item exists\n    if (!item) {\n      res.status(404);\n      throw new Error(\"Item not found\");\n    }\n\n    // Ensure the logged-in user owns the item\n    if (item.user.toString() !== req.user.id) {\n      res.status(403);\n      throw new Error(\"User not authorized to update this item\");\n    }\n\n    // Update the item\n    const updatedItem = await Item.findByIdAndUpdate(req.params.id, req.body, {\n      new: true, // Return the updated document\n      runValidators: true, // Ensure validation is run\n    });\n\n    res.status(200).json(updatedItem); // 200 for successful update\n  } catch (error) {\n    console.error(\"Error updating item:\", error.message);\n    res.status(500).json({ message: \"Server error updating item\" });\n  }\n});\n\n//@desc Delete item\n//@route Delete /api/items/:id\n//@acess private\nexport const deleteItem = asyncHandler(async (req, res) => {\n  try {\n    const item = await Item.findByIdAndDelete(req.params.id);\n\n    if (!item) {\n      res.status(400);\n      throw new Error(\"Item not found\");\n    }\n\n    if (!req.user) {\n      res.status(401);\n      throw new Error(\"Not Authorized\");\n    }\n\n    if (item.user.toString() !== req.user.id) {\n      res.status(401);\n      throw new Error(\"User not authorized\");\n    }\n\n    res.status(200).json({ message: `Item deleted ${req.params.id}` });\n  } catch (error) {\n    console.error(\"Error deleting item\", error);\n    res.status(500).json({ message: \"Server error deleting item\" });\n  }\n});\n","import express from \"express\";\nimport { protect } from \"../middleware/authMiddleware.js\";\nconst router = express.Router();\n\n//import the controllers\nimport {\n  getItems,\n  createItem,\n  updateItem,\n  deleteItem,\n} from \"../controllers/itemController.js\";\n\n//Route to get the items\nrouter.route(\"/\").get(getItems).post(protect, createItem);\n\n//routes to update an Item\nrouter.route(\"/:id\").put(protect, updateItem).delete(protect, deleteItem);\n\nexport default router;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bcryptjs\");","import bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nimport asyncHandler from \"express-async-handler\";\nimport User from \"../models/userModel.js\";\n\n// @desc    Register a new user\n// @route   POST /api/users\n// @access  Public\nexport const registerUser = asyncHandler(async (req, res) => {\n  const { name, email, password } = req.body;\n\n  if (!name || !email || !password) {\n    res.status(400);\n    throw new Error(\"Please add all the fields\");\n  }\n\n  // Check if the user already exists\n  const userExists = await User.findOne({ email });\n  if (userExists) {\n    res.status(400);\n    throw new Error(\"User already exists\");\n  }\n\n  // Hash the password\n  const salt = await bcrypt.genSalt(10);\n  const hashedPassword = await bcrypt.hash(password, salt);\n\n  // Create the user\n  const user = await User.create({\n    name,\n    email,\n    password: hashedPassword,\n  });\n\n  if (user) {\n    // Generate token after successful user creation\n    const token = generateToken(user._id);\n\n    res.status(201).json({\n      _id: user.id,\n      name: user.name,\n      email: user.email,\n      token,\n    });\n  } else {\n    res.status(400);\n    throw new Error(\"Invalid user data\");\n  }\n});\n\n// @desc    Authenticate a user (Login)\n// @route   POST /api/users/login\n// @access  Public\nexport const loginUser = asyncHandler(async (req, res) => {\n  const { email, password } = req.body;\n\n  // Check for user by email\n  const user = await User.findOne({ email });\n\n  if (user && (await bcrypt.compare(password, user.password))) {\n    res.status(200).json({\n      _id: user.id,\n      name: user.name,\n      email: user.email,\n      token: generateToken(user._id),\n    });\n  } else {\n    res.status(400);\n    throw new Error(\"Invalid login credentials\");\n  }\n});\n\n// @desc    Get user data\n// @route   GET /api/users/me\n// @access  Private\nexport const getUser = asyncHandler(async (req, res) => {\n  const { _id, name, email } = await User.findById(req.user.id);\n\n  res.status(200).json({\n    id: _id,\n    name,\n    email,\n  });\n});\n\n// Generate JWT Token\nconst generateToken = (id) => {\n  return jwt.sign({ id }, process.env.JWT_SECRET, {\n    expiresIn: \"1d\", // Token valid for 1 day\n  });\n};\n","import express from \"express\";\nimport { protect } from \"../middleware/authMiddleware.js\";\nconst router = express.Router();\n\n//import the controllers\nimport {\n  registerUser,\n  loginUser,\n  getUser,\n} from \"../controllers/userController.js\";\n\nrouter.route(\"/\").post(registerUser);\n\nrouter.route(\"/login\").post(loginUser);\n\nrouter.route(\"/me\").get(protect, getUser);\n\nexport default router;\n","export const errorHandler = (err, req, res, next) => {\n  const statusCode = res.statusCode ? res.statusCode : 500;\n  res.status(statusCode);\n\n  res.json({\n    message: err.message,\n    stack: process.env.NODE_ENV === \"production\" ? null : err.stack,\n  });\n};\n","import mongoose from \"mongoose\";\n\nexport const connectDB = async () => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGO_URI);\n\n    console.log(`MongoDb connected: ${conn.connection.host.cyan.underline}`);\n  } catch (error) {\n    console.log(error);\n    process.exit(1);\n  }\n};\n","import express from \"express\";\nimport dotenv from \"dotenv\";\nimport colors from \"colors\";\nimport cors from \"cors\";\n\ndotenv.config();\n\n//Import the item routes\nimport itemRoutes from \"./routes/itemRoutes.js\";\n\n//import user routes\nimport userRoutes from \"./routes/userRoutes.js\";\n\n//import the error handler middleware\nimport { errorHandler } from \"./middleware/errorMiddleware.js\";\n\n//import the connectDB\nimport { connectDB } from \"./config/db.js\";\n\n//initialize the port\nconst port = process.env.PORT || 8000;\n\n//call the connectDB\nconnectDB();\n\nconst app = express();\n\napp.use(cors());\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n//use the item routes\napp.use(\"/api/items\", itemRoutes);\n\n//use the use routes\napp.use(\"/api/users\", userRoutes);\n\n//use the error handler middlerware\napp.use(errorHandler);\n\napp.listen(port, () => console.log(`Server stated on port ${port}`));\n"],"names":["require","userSchema","mongoose","name","type","String","required","email","unique","password","timestamps","protect","aysncHandler","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","req","res","next","token","decoded","_context","prev","headers","authorization","startsWith","split","jwt","process","env","JWT_SECRET","User","findById","id","select","user","sent","t0","status","Error","stop","_x","_x2","_x3","apply","arguments","itemSchema","Types","ObjectId","ref","category","quantity","Number","unitPrice","SKU","description","getItems","asyncHandler","items","Item","find","json","message","createItem","_ref2","_callee2","item","_context2","body","create","_x4","updateItem","_ref3","_callee3","updatedItem","_context3","params","toString","findByIdAndUpdate","new","runValidators","_x5","_x6","deleteItem","_ref4","_callee4","_context4","findByIdAndDelete","concat","_x7","_x8","router","express","route","get","post","put","registerUser","_req$body","salt","hashedPassword","findOne","bcrypt","generateToken","_id","loginUser","_req$body2","getUser","_yield$User$findById","expiresIn","connectDB","MONGO_URI","exit","dotenv","port","PORT","app","use","cors","extended","itemRoutes","userRoutes","err","statusCode","stack","listen"],"sourceRoot":""}